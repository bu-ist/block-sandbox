{"version":3,"file":"blocks/github-embed/editor.js","mappings":"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","sources":["webpack://block-sandbox/./src/blocks/github-embed/edit.js","webpack://block-sandbox/./src/blocks/github-embed/modules/inspector.scss","webpack://block-sandbox/external window \"React\"","webpack://block-sandbox/external window [\"wp\",\"blockEditor\"]","webpack://block-sandbox/external window [\"wp\",\"blocks\"]","webpack://block-sandbox/external window [\"wp\",\"components\"]","webpack://block-sandbox/external window [\"wp\",\"i18n\"]","webpack://block-sandbox/./src/blocks/github-embed/modules/inspector.mjs","webpack://block-sandbox/webpack/bootstrap","webpack://block-sandbox/webpack/runtime/compat get default export","webpack://block-sandbox/webpack/runtime/define property getters","webpack://block-sandbox/webpack/runtime/hasOwnProperty shorthand","webpack://block-sandbox/webpack/runtime/make namespace object","webpack://block-sandbox/./src/blocks/github-embed/editor.js"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { useBlockProps, RichText } from '@wordpress/block-editor';\n\n/**\n * Import editor partial code.\n */\nimport { EditorPartialsInspectorControls } from './modules/inspector.mjs';\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @param  props\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit\n *\n * @return {Element} Element to render.\n */\nexport default function Edit( props ) {\n\tconst { attributes, setAttributes } = props;\n\tconst { githuburl } = attributes;\n\tconst updateURL = ( val ) => {\n\t\tsetAttributes( { githuburl: val } );\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<EditorPartialsInspectorControls { ...props } />\n\t\t\t<div { ...useBlockProps() }>\n\t\t\t\t<div>\n\t\t\t\t\t<RichText\n\t\t\t\t\t\tplaceholder={ __( 'url', 'block-sandbox' ) }\n\t\t\t\t\t\ttagName=\"code\"\n\t\t\t\t\t\tclassname=\"bu-block-github-embed-githuburl\"\n\t\t\t\t\t\tonChange={ updateURL }\n\t\t\t\t\t\tvalue={ githuburl }\n\t\t\t\t\t\tallowedFormats={ [] }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\n * @todo https://developer.wordpress.org/coding-standards/wordpress-coding-standards/javascript/\n * @todo https://github.com/WordPress/gutenberg/blob/trunk/packages/block-editor/src/components/inspector-controls/README.md\n * @todo https://developer.wordpress.org/block-editor/reference-guides/components/\n */\nimport { __ } from '@wordpress/i18n';\n\n// Import WP assets.\nimport { InspectorControls } from '@wordpress/block-editor';\n\n// Import WP assets.\nimport {\n\tPanelBody,\n\tTextControl, // https://developer.wordpress.org/block-editor/reference-guides/components/text-control/\n\tSelectControl, // https://developer.wordpress.org/block-editor/reference-guides/components/select-control/\n} from '@wordpress/components';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './inspector.scss';\n\n// React requires that the first letter of components be capitalized. JSX will use this capitalization to tell the difference between an HTML tag and a component instance. If the first letter of a name is capitalized, then JSX knows it's a component instance; if not, then it's an HTML element.\nexport const EditorPartialsInspectorControls = ( {\n\tattributes,\n\tsetAttributes,\n} ) => {\n\tconst {\n\t\tlanguage,\n\t\tprismTheme,\n\t\tlines,\n\t} = attributes;\n\n\tfunction setLanguage( val ) {\n\t\tsetAttributes( { language: val } );\n\t}\n\n\tfunction setTheme( val ) {\n\t\tsetAttributes( { prismTheme: val } );\n\t}\n\n\tfunction setLines( val ) {\n\t\tsetAttributes( { lines: val } );\n\t}\n\n\treturn (\n\t\t<InspectorControls>\n\t\t\t<PanelBody\n\t\t\t\ttitle={ __( 'PrismJS' ) }\n\t\t\t\tclassName=\"bu-block-block-sandbox-github-embed-panel\"\n\t\t\t>\n\t\t\t<SelectControl\n\t\t\t\tlabel=\"Language\"\n\t\t\t\tvalue={ language }\n\t\t\t\toptions={ [\n\t\t\t\t\t{ value: '', label: 'none' },\n\t\t\t\t\t{ label: 'css', value: 'css' },\n\t\t\t\t\t{ label: 'scss', value: 'scss' },\n\t\t\t\t\t{ label: 'php', value: 'php' },\n\t\t\t\t\t{ label: 'js', value: 'js' },\n\t\t\t\t\t{ label: 'md', value: 'md' },\n\t\t\t\t\t{ label: 'json', value: 'json' },\n\t\t\t\t\t{ label: 'html', value: 'html' },\n\t\t\t\t] }\n\t\t\t\tonChange={ setLanguage }\n\t\t\t/>\n\t\t\t{/* <SelectControl\n\t\t\t\tlabel=\"Theme\"\n\t\t\t\tvalue={ prismTheme }\n\t\t\t\toptions={ [\n\t\t\t\t\t{ value: '', label: 'テーマ', disabled: true },\n\t\t\t\t\t{ label: 'coy', value: 'coy' },\n\t\t\t\t\t{ label: 'dark', value: 'dark' },\n\t\t\t\t\t{ label: 'funky', value: 'funky' },\n\t\t\t\t\t{ label: 'okaidia', value: 'okaidia' },\n\t\t\t\t\t{ label: 'solarizedlight', value: 'solarizedlight' },\n\t\t\t\t\t{ label: 'tomorrow', value: 'tomorrow' },\n\t\t\t\t\t{ label: 'twilight', value: 'twilight' },\n\t\t\t\t\t{ label: 'default', value: 'default' },\n\t\t\t\t] }\n\t\t\t\tonChange={ setTheme }\n\t\t\t/> */}\n\t\t\t<TextControl\n\t\t\t\tlabel=\"Highlight Lines\"\n\t\t\t\thelp=\"https://prismjs.com/plugins/line-highlight/\"\n\t\t\t\tvalue={ lines }\n\t\t\t\tonChange={ setLines }\n\t\t\t/>\n\t\t\t</PanelBody>\n\t\t</InspectorControls>\n\t);\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\n// import './editor.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport metadata from './block.json';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType( metadata.name, {\n\tattributes: {\n\t\tgithuburl: {\n\t\t\ttype: 'string',\n\t\t},\n\t\tlanguage: {\n\t\t\ttype: 'string',\n\t\t},\n\t\tprismTheme: {\n\t\t\ttype: 'string',\n\t\t},\n\t\tlines: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\tsave: ( { attributes } ) => null,\n} );\n"],"names":["__","useBlockProps","RichText","EditorPartialsInspectorControls","Edit","props","attributes","setAttributes","githuburl","updateURL","val","createElement","Fragment","placeholder","tagName","classname","onChange","value","allowedFormats","InspectorControls","PanelBody","TextControl","SelectControl","language","prismTheme","lines","setLanguage","setTheme","setLines","title","className","label","options","help","registerBlockType","metadata","name","type","edit","save"],"sourceRoot":""}